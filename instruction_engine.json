{
  "openapi": "3.0.1",
  "info": {
    "title": "SmartX Integration APIs",
    "description": "This is a sample set of APIs exposed for SmartX for integration with American Portfolios.",
    "contact": {
      "email": "apiteam@americanportfolios.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api-tst.americanportfolios.com/smx"
    }
  ],
  "tags": [
    {
      "name": "instruction_engine",
      "description": "APIs for interacting with Instruction Engine. The Instruction Engine is essentially an instruction queue used by various processes create to indicate to other processes what they need to do when certain events occur by creating an instruction. The instruction type is the address for the target process. The target process is essentially an instruction executor for that specific type of instruction."
    }
  ],
  "paths": {
    "/instruction_engine": {
      "post": {
        "tags": [
          "instruction_engine"
        ],
        "summary": "Add a new instruction to the instruction queue",
        "operationId": "add_instruction",
        "requestBody": {
          "description": "Instruction object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/instruction"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/instruction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        },
        "security": [
          {
            "ap_tst_auth": [
              "write:instructions",
              "read:instructions"
            ]
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/instruction_engine/find_by_type": {
      "get": {
        "tags": [
          "instruction_engine"
        ],
        "summary": "Finds instructions by type of instruction",
        "description": "Muliple instruction types can be provided with comma separated strings. Use         type1, type2, type3 for testing.",
        "operationId": "find_instructions_by_type",
        "parameters": [
          {
            "name": "instruction_type",
            "in": "query",
            "description": "Tags to filter by",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/instruction"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/instruction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid tag value",
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "ap_tst_auth": [
              "write:instructions",
              "read:instructions"
            ]
          }
        ]
      }
    },
    "/instruction_engine/{instruction_id}": {
      "get": {
        "tags": [
          "instruction_engine"
        ],
        "summary": "Find instruction by ID",
        "description": "Returns a single instruction",
        "operationId": "getInstructionById",
        "parameters": [
          {
            "name": "instruction_id",
            "in": "path",
            "description": "ID of instruction to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/instruction"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instruction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Pet not found",
            "content": {}
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/instruction_engine/{instruction_id}/update_status": {
      "post": {
        "tags": [
          "instruction_engine"
        ],
        "summary": "updates status of instruction",
        "operationId": "update_status",
        "parameters": [
          {
            "name": "instruction_id",
            "in": "path",
            "description": "ID of instruction to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_response"
                }
              }
            }
          }
        },
        "security": [
          {
            "ap_tst_auth": [
              "write:instructions",
              "read:instructions"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "instruction": {
        "required": [
          "name",
          "instruction_type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "example": "set target for account 0A1567342"
          },
          "instruction_type": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "instruction status in the queue",
            "enum": [
              "new",
              "pending execution",
              "executed",
              "cancelled",
              "error"
            ]
          },
          "instruction_json": {
            "type": "string"
          }
        },
        "xml": {
          "name": "instruction"
        }
      },
      "api_response": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "ap_tst_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://login-tst.americanportfolios.com/",
            "scopes": {
              "write:instructions": "modify instructions",
              "read:instructions": "read instructions"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}
